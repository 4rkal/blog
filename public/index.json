[{"content":"Hi there üëã I\u0026rsquo;m 4rkal. I created this blog as free alternative to my medium\nI generaly post random stuff I stumble upon. Mostly about linux, privacy , crypto and programming.\nIf you like my blog I\u0026rsquo;ll happily accept donations\nSocials Heres how you can reach me:\nSession:053a1d66ce897ff32b87a4ab4232529f47b734971308d61984fc84b16fec87a519\nMatrix: 4rkal:matrix.org\nTwitter: 4rkal_\nEmail: 4rkal@proton.me\nEmail (cock.li): 4rkal@horsefucker.org\n","permalink":"https://4rkal.eu.org/about/","summary":"Hi there üëã I\u0026rsquo;m 4rkal. I created this blog as free alternative to my medium\nI generaly post random stuff I stumble upon. Mostly about linux, privacy , crypto and programming.\nIf you like my blog I\u0026rsquo;ll happily accept donations\nSocials Heres how you can reach me:\nSession:053a1d66ce897ff32b87a4ab4232529f47b734971308d61984fc84b16fec87a519\nMatrix: 4rkal:matrix.org\nTwitter: 4rkal_\nEmail: 4rkal@proton.me\nEmail (cock.li): 4rkal@horsefucker.org","title":"About"},{"content":"If you clicked on this article you probably know what these two technologies are but if you don\u0026rsquo;t here\u0026rsquo;s a quick explanation:\nObsidian Obsidian is a feature packed markdown editor. But it\u0026rsquo;s not just a markdown editor. It\u0026rsquo;s a way to manage knowledge. It\u0026rsquo;s great for organizing your thoughts in a flexible, non-linear way.\nObsidian works on all platforms. So you can write articles from basically any platform.\nI have been taking all of my notes in it for a couple of months now and it\u0026rsquo;s amazing!\nHugo Hugo is an ultra fast static website generator made in golang. I have been using hugo for my blog for almost 2 years now. I recently switched the theme of my my blog. Read more about the change New Look, new start.\nSetup In this article I will not be showing how to setup these two technologies but merely how to get them to work together.\nIf you wan\u0026rsquo;t to learn how I setup this whole blog using hugo, cloudflare and render.com read: How I setup this blog for free (domain, hosting, ssl) Complete Guide\nIf you wan\u0026rsquo;t a good guide on how to use obsidian read: Getting started - obsidian.md\nGoals My goals for the setup are:\nUsing a single obsidian vault Have an easy to use obsidian template that I can use for my blog posts. Keep my personal vault folders private. Auto publish using obsidian hotkeys. Have all markdown files in a public github repository, so that people can propose changes Existing setup The way that my current work flow works is:\nEdit articles from the content folder. Run hugo command. Push to github. Render.com automatically picks up the changes and serves them. Journey If you want to skip the journey part you can go straight to The Sauce\nI will be going through a couple of mistakes that I made while setting this up.\nMistake #1 The first idea that I had was to create a simple symlink (I use linux btw) that would link the two folders together.\nBasically I have two folders:\nblog/ vault/ The blog folder contains all the blog folders and the vault is my personal vault.\nThe symlink would link these folders\nblog/content vault/Blog However the problem with a symlink is that the folder content is not visible in my git repo. This means that people can not propose changes to any of my articles\nMistake #2 I wanted to have my folders synced. I tried writing a couple of bash scripts that automatically synced the two folders using a cronjob. However having that constantly running the background is a waste of resources when I am not writing. Simply running the scripts via cli is just not that smooth.\nThe Sauce Basically the way that I have set this up is I have two folders:\nblog vault The blog folder contains all the necessary hugo files and also has a sub directory called content that houses all of the markdown blog files.\nI created a new folder inside of my vault called Blog\nblog/content vault/Blog After that I copied over all of my files from the content directory to the Blog.\nI then started writing this very article\nObsidian templates I needed some way to setup a simple template to contain all of the required hugo front matter.\nThat is quite easy.\nRead about how to setup templates Templates - obsidian.md\nI created a file called Blog Post in my templates folder\nMy Blog Post template contains the following:\n--- title: \u0026#34;{{Title}}\u0026#34; description: date: \u0026#34;{{date:YYYY-MM-DD}}T{{time:HH:mm:ss}}+00:00\u0026#34; draft: true --- **If you enjoyed this article consider [supporting me](https://4rkal.eu.org/donate)** I have all the required front matter including a title, description and a date in the format that hugo asks.\nI also added a small donation text that I include at the bottom of every article.\nThis means that I can automatically insert this template into any file and start writing!\nFolder Syncing Now I want all of my files in my vault/Blog directory to be copied over to the blog/content\nThank\u0026rsquo;s to a helpful discord user I found the obsidian-shellcommands plugin.\nNOTE: this plugin does not currently work very well with the flatpak version of obsidian (since flatpak isolates the environment) . Using another alternative (.deb or appimage) seems to work.\nIt allows you to run shell commands in the background with a hotkey.\nThe steps to set this up are the following:\nInstall the plugin Enable the plugin Go to the plugin options Click on New shell command Now you will need to enter a shell command to copy the files from the one folder to the other. On Linux/MacOS that is:\ncp -a ~/folder1/. ~/folder2/\nin my case that is cp -a ~/Documents/vault/Blog/. ~/Documents/blog/content/\nOn windows it most probably is:\nrobocopy \u0026quot;%USERPROFILE%\\folder1\u0026quot; \u0026quot;%USERPROFILE%\\folder2\u0026quot; /E /COPYALL\nAfter that we need to set a hotkey that will run the command\nClick on the (+) icon to go to the hotkey settings and assign a hotkey\nMy hotkey is CTR + 0, simply because that was available.\nNow every time that I run the hotkey it copies over all of my files to the hugo folder ready to be published\nAuto publishing scripts I also want to be able to automatically publish my articles. But I want it to happen when hitting a hotkey.\nI wrote a small script that does exactly that:\n#!/bin/bash cd ~/Documents/blog hugo git add . git commit -m \u0026#34;new\u0026#34; git push -u origin main This script will build my website, commit and push to my github repo, where it is picked up and published. Read How I setup this blog for free (domain, hosting, ssl) Complete Guide to learn how to setup your own blog for free.\nDon\u0026rsquo;t forget to make the script executable by running\nchmod +x ./YOURSCRIPT.sh\nThen create a new shell command for the shellcommand plugin (as we did before) and enter the path to your script.\nIn my case that is:\n~/Documents/blog/push.sh\nThen enter a hotkey and you\u0026rsquo;re done!\nConclusion I can now simply open my obsidian vault, create a new file, insert my template and have all the info automatically entered.\nI then write my article inside of obsidian\nRun my hotkey and copy all the files into the hugo directory\nHit another key and my blog is published!\nIf you enjoyed this article consider supporting me\n","permalink":"https://4rkal.eu.org/posts/obsidianhugo/","summary":"If you clicked on this article you probably know what these two technologies are but if you don\u0026rsquo;t here\u0026rsquo;s a quick explanation:\nObsidian Obsidian is a feature packed markdown editor. But it\u0026rsquo;s not just a markdown editor. It\u0026rsquo;s a way to manage knowledge. It\u0026rsquo;s great for organizing your thoughts in a flexible, non-linear way.\nObsidian works on all platforms. So you can write articles from basically any platform.\nI have been taking all of my notes in it for a couple of months now and it\u0026rsquo;s amazing!","title":"My Obsidian + Hugo blogging setup (Auto publishing with hotkeys)"},{"content":"I recently switched from the hugo LoveIt theme to PaperModX . Why the switch? The LoveIt theme hasn\u0026rsquo;t been updated in 2+ years. PaperModX has a more modern look LoveIt doesn\u0026rsquo;t work that well with obsidian. The overall switch went pretty smoothly. You can see the changes I made in this commit.\nFor anyone wondering this what the website used to look like\nMore articles to come! The theme wasn\u0026rsquo;t the only change that I made. After a pretty long break, I have decided to start publishing articles regularly again!\nI will also start to update any outdated articles\nSo, stay tuned - There\u0026rsquo;s more content to come!\nSubscribe to my RSS feed to stay up to date here\nThere\u0026rsquo;s also going to be a mailing list soon‚Ñ¢Ô∏è\n","permalink":"https://4rkal.eu.org/posts/newlook/","summary":"I recently switched from the hugo LoveIt theme to PaperModX . Why the switch? The LoveIt theme hasn\u0026rsquo;t been updated in 2+ years. PaperModX has a more modern look LoveIt doesn\u0026rsquo;t work that well with obsidian. The overall switch went pretty smoothly. You can see the changes I made in this commit.\nFor anyone wondering this what the website used to look like\nMore articles to come! The theme wasn\u0026rsquo;t the only change that I made.","title":"New look, new start"},{"content":"In this comprehensive guide, I will walk you through the process of easily setting up Monero cold storage using an old computer and your smartphone, using animated QR codes. No USB needed!\nRequirements An old laptop/computer with a webcam (to be kept offline). Called offline or cold computer. An android smartphone. Your main computer Required reads Before starting this article you must read:\nKey concepts Monero offline transaction signing details Cold computer setup Your offline computer/laptop will be signing all of the transactions. It should always be kept offline i.e cold. It can not be used for other tasks.\nI highly recommend that you use a linux distribution and NOT windows for cold storage. Linux is free and opensource. I highly recommend pepermintOS or MX linux as they are lightweight and pretty easy to setup.\nI will not be guiding you on how to install [[linux]]. But here are some resourses to help you get started:\nInstalling PeperMintOS \u0026lt;\u0026ndash; somewhat 32 bit support, lightweight\nInstalling LinuxMint \u0026lt;\u0026ndash; better for newer computers\nInstalling MX Linux \u0026lt;\u0026ndash; 32 bit support, pretty lightweight\nDownloading \u0026amp; Installing necessary software The first thing that we will need to do is download the required software.\nWe will need featherwallet\nand that\u0026rsquo;s about it.\nTaking the device offline It is highly recommended that you disable the wifi and bluetooth modules on your cold computer. This can be by physically detaching the wifi and bluetooth module or disabling it in the bios. The later is less secure if you\u0026rsquo;re going full on tinfoilhat.\nHere\u0026rsquo;s a guide on how to physically disable them from malvarma.org\nA guide on how to disable it via BIOS can be found by searching your specific hardware on your favorite search engine.\nComputer cold wallet setup Now we will have to setup our wallet. Ensure that your device is completely offline and then open featherwallet.\nClick on Create a new wallet. Then click on Next. You will be presented with your seedphrase. Write it down!! on physical paper. Select a name for your wallet and click Next Select a wallet password and click Next. Now that the wallet is open in the bottom right corner there will be a dot. Click on it and select the offline box and then click Disable all network connections (offline) Phone We will now be installing the anonero software. We will be using NERO from the ANON/NERO suite.\nDownload and install fdroid. Apk can be downloaded from the F-Droid website\nDownload and install orbot. Can be installed from google play store here\nOpen orbot. Select VPN Mode, click on the onion logo that says start\nOpen fdroid and in the settings scroll down and enable Use Tor option\nAgain in the settings that click on the repositories section and add the following:\nhttp://anonero5wmhraxqsvzq2ncgptq6gq45qoto6fnkfwughfl4gbt44swad.onion/fdroid/repo?fingerprint=C5705FF724538F6925B6093517F53C6C6BB6CF82518ED40EB4B8CBBB87DC0D1D\nSource: anonero.io\nClick on latest and then search for NERO\nClick on install That\u0026rsquo;s it ; )\nUpdating NERO If you want to update NERO you will have to turn orbot on, open fdroid and refresh the updates tab\nNERO setup To set up NERO, follow these steps:\nOnce NERO is successfully installed, open the application.\nClick on RESTORE WALLET option and select RESTORE FROM KEYS\nProceed to establish a node connection. You can find a lot of Monero nodes here.\nRandom clearnet node:\nhttp://xmr.monopolymoney.eu:18089 Random Tor node:\nhttp://xmrsalty4hg7lq5ci4kzc2xxcic57azapolbunmkiypnmr3wp7uvqnyd.onion:18089 Copy the node address into the node field. By default you shouldn\u0026rsquo;t need a username or password\nBy default tor connectivity is enabled in NERO. You can disable it by going into the proxy settings and deleting everything.\nClick on Connect. It will try connecting. If it fails check your internet connection or try another node Importing view-only wallet Now you will have to import your wallets Primary address , Secret-View key and Restore height into NERO. To import that info to nero:\nOn your offline computer open featherwallet and navigate to Wallet then View-Only. Enter your password and click on the Show QR\nNow in nero in the View only keys screen click on the square icon to scan the qr. Then scan the qr displayed by featherwallet. All the info should be filled in after scanning the qr code. Click Next.\nSet a pin. After that your wallet should be imported into NERO.\nReceiving monero To receive monero you can follow these steps\nOpen NERO and enter your pin Click on the receive tab (the one with the qr code icon) Long hold on the address Select one of the SubAddreses and click on the copy icon. Transfer any amount of monero to that address. After 10 confirmations it should be spendable. Proceed to the next step.\nSigning transactions Signing/Broadcasting transactions is easy with the NERO/Feather duo. No usbs are needed it is all done via animated QR codes.\nTo sign/broadcast a transaction follow these steps On your phone:\nOpen NERO and enter your pin In the send tab enter the desired address and amount Click on continue, you should now see an animated QR code. On your cold computer\nOpen feather and enter your password Click on Tools \u0026gt; Offline transaction signing. You should now see your camera Show your phone to the computers camera so that it can read the QR code. After it has been picked up by your computer you should see a QR code displayed on your computers screen In NERO.\nClick on SCAN KEY IMAGES Scan the QR code from the computer\u0026rsquo;s screen Once it has been picked up you can see the Address, Amount, Fee and Total. Click on confirm You should now see the unsigned TX screen. In feather click on Next. Then scan the QR code displayed by NERO to your computer. Once the bar is at 100%, you should again see the Address, Amount, Fee and Total. If your ok with that click on SIGN.\nIn NERO\nClick on SCAN SIGNED TX Scan the QR displayed by feather wallet. Click on Yes, once asked whether or not to broadcast transaction You have now sent the transaction.\nif this article helped you out consider supporting me\n","permalink":"https://4rkal.eu.org/posts/feathernero/","summary":"In this comprehensive guide, I will walk you through the process of easily setting up Monero cold storage using an old computer and your smartphone, using animated QR codes. No USB needed!\nRequirements An old laptop/computer with a webcam (to be kept offline). Called offline or cold computer. An android smartphone. Your main computer Required reads Before starting this article you must read:\nKey concepts Monero offline transaction signing details Cold computer setup Your offline computer/laptop will be signing all of the transactions.","title":"Ultimate Monero ColdStorage Guide (Feather X Anonero)"},{"content":"In this article I will show you how to \u0026ldquo;easily\u0026rdquo; generate a live archlinux usb with the monero gui pre-installed.\nRequirements An arch[[linux]] install A usb Setup In this guide I will show you how to build a custom archlinux iso with monerogui installed. I will not be providing any pre-built images.\nThe first thing you will have to do is install archuseriso. You can install it from the aur using this command:\nyay -S archuseriso\nNow open a terminal and navigate to any directory. Then run the following command:\nsudo aui-mkiso -m 'img' --add-pkg=monero-gui xfce --verbose\nThis will build a new gpt image with persistense, add the monero-gui package and use xfce as the default desktop. The \u0026ndash;verbose flag is optional.\nAfter that is finished building you can use your favourite image writter to write the image. I will be using dd sudo dd if=out/aui-xfce*.img of=/dev/CHANGEME\nYou will have to write that to your usb, so in /dev/CHANGEME just put your usb. You can find it by running lsblk Don\u0026rsquo;t be stupid If you enter the wrong device this could lead to data loss. Be careful!\nAfter the image is written you will have to boot to your usb.\nFirst however it is recommended that you disconnect any ethernet/other cables plugged in so that it is trully offline.\nYou can also disable wifi and bluetooth from the bios . \u0026ldquo;Advanced\u0026rdquo; users only don\u0026rsquo;t be retarded\nNow only plug in your usb drive and reboot into the usb. You will generaly have to press either F8,F9,F10,F11 upon booting and then select your usb.\nNow you have two options\nBoot into persistent. Boot into memory. When booting into persistent your files will be saved. This however does also involve your wallet file.\nFor the more secure option you can select boot into memory. This will delete all the traces of the wallet after reboot. You will have to write the seed down and manually enter it upon every boot if you want to authorize transactions.\nI will boot into persistent since I will use a strong password and will keep the usb in a safe place. If you want to be extra paranoid use the second option.\nAfter the os has fully booted you will have to click on the Applications icon \u0026gt; internet \u0026gt; Monero GUI. Alternatively open a terminal and type monero-wallet-gui\nYou will now be greated by the monero gui setup guide.\nSelect your language etc.\nSelect advanced \u0026gt; Click on Create a new wallet . You can select whatever you want in the wallet name and location \u0026gt; Click next.\nNow you will be prompted with your recovery phrase. Write it down on PHYSICAL PAPER and keep it in a safe place. Also note the height and or creation date.\nWrite it down! If you don\u0026rsquo;t write down your seed and keep it in a secure place you will lose access to your monero!\nThen click next. Now select a strong password. Alteast 12 chars!. Remeber it!\nClick next. Then click on Connect to a remote node but don\u0026rsquo;t add one, we don\u0026rsquo;t need it.\nThen click on create wallet.\nAfter you have opened your wallet, click on settings and then Create view-only wallet. Then click on ok. Logout of your wallet. Click on Open wallet from file and select the new file called WALLETNAME_viewonly.\nOnce you have logged into your view only wallet click on settings again and select Show seeds and keys. Scroll down to the botton and import your view only wallet via qr to your mobile wallet. Here are some guides for every wallet:\nCake wallet Monerujo What have we acomplished? You now have a cold wallet for offline signing on your usb and a view-only wallet on your phone. Basicly you can view all incoming transactions on your phone but can\u0026rsquo;t spend them there. Only your computer booted into the usb can sign them.\nSigning transactions I won\u0026rsquo;t cover doing this in this article. But you can find out more about how to send transactions from cold storage here\n","permalink":"https://4rkal.eu.org/posts/coldstorage/","summary":"In this article I will show you how to \u0026ldquo;easily\u0026rdquo; generate a live archlinux usb with the monero gui pre-installed.\nRequirements An arch[[linux]] install A usb Setup In this guide I will show you how to build a custom archlinux iso with monerogui installed. I will not be providing any pre-built images.\nThe first thing you will have to do is install archuseriso. You can install it from the aur using this command:","title":"Easy monero cold storage"},{"content":"Created the monero archive (tor)\n","permalink":"https://4rkal.eu.org/updates/monero-archive/","summary":"Created the monero archive (tor)","title":"Created the monero archive"},{"content":"I am participating in hacktoberfest 2023\nGot a tree planted in my name here\n","permalink":"https://4rkal.eu.org/updates/hacktoberfest23/","summary":"I am participating in hacktoberfest 2023\nGot a tree planted in my name here","title":"Hacktoberfest 2023"},{"content":"In this article I will show you how I securely connect to my remote machines without having to configure port forwarding.\nRequirements: A computer \u0026ldquo;server\u0026rdquo; (running linux) A internet connection Another computer to connect to your server (running linux) Why? If you want to access your server without portforwarding in a extremely secure fashion you will want to follow this tutorial. You will be connecting to the server via tor which will make it harder for anyone to find the url of the server and ill show you how to setup keybased auth for even more security!\nSetup You will have to install the following packages (ssh, tor)\nOn debian\nsudo apt install openssh-client\nOn arch\nsudo pacman -S openssh\nAfter that enable the ssh service\nDebian:\nsudo systemctl enable ssh\nArch:\nsudo systemctl enable sshd\nIf you want to check if this worked just use another computer and run\nssh USER@IP\nfor example I run\nssh arkal@192.168.1.69\nAfter this you can enable KeyBased authentication for more security\nHere is my article how to enable that¬†:\nEnable keybased authentication\nNow we need to install tor:\nOn debian\nsudo apt install tor\nOn arch\nsudo pacman -S tor\nThen start and enable the tor service with\nsudo systemctl start tor \u0026amp;\u0026amp; sudo systemctl enable tor\nAfter you have done that you want to edit your torrc file. Using your favorite text editor\nsudo vim /etc/tor/torrc\nNow you will want to navigate to the part that says HiddenService. And paste the following\nHiddenServiceDir /var/lib/tor/ssh/ HiddenServicePort 22 127.0.0.1:22 Save your file and exit the editor (for nano cntrl s, cntrl x)\nNow you want will have to restart the tor service\nsudo systemctl restart tor\nAfter that run the following:\nsudo cat /var/lib/tor/ssh/hostname\nYou should see a string of letters and characters ending in¬†.onion¬†Now on your other machine:\nConnecting to the server On your main machine you will have to do the following:\nHave ssh, tor, and socat installed\nAfter you have installed them you will have to edit the ssh config\nvim .ssh/config\nAnd paste the following\nHost NAME Hostname URL.onion User USER Port 22 Proxycommand socat - SOCKS4A:127.0.0.1:%h:%p,socksport=9050 You will have to change the NAME, URL and USER. The user is the user you want to connect as to your server and the url is the url you that ends in¬†.onion from above.\nNow save the file and exit.\nNow edit the torrc file. Using your favorite text editor:\nvim /etc/tor/torrc\nFind the line that says SOCKSPort and uncomment it\nSOCKSPort 9050\nRestart the tor service\nsystemctl restart tor\nTo connect to the server run the following command:\nssh NAME\nWith NAME being the name that you gave to the server in the config file.\nIf this article helped you out consider supporting me\n","permalink":"https://4rkal.eu.org/posts/onionssh/","summary":"In this article I will show you how I securely connect to my remote machines without having to configure port forwarding.\nRequirements: A computer \u0026ldquo;server\u0026rdquo; (running linux) A internet connection Another computer to connect to your server (running linux) Why? If you want to access your server without portforwarding in a extremely secure fashion you will want to follow this tutorial. You will be connecting to the server via tor which will make it harder for anyone to find the url of the server and ill show you how to setup keybased auth for even more security!","title":"SSH Remote Access NO Port-Forwarding NO Cloudflare"},{"content":"In this article I‚Äôll show you how I setup this blog completely for free. I‚Äôll show you how to use hugo to write your blog, Cloudflare and eu.org for your domain and ssl, Render and github for the hosting and even how to get your blog on google.\nWhat is hugo? Hugo is a fast and popular open-source static site generator used for creating static websites without requiring a database or dynamic components.\nHugo setup Download and install hugo\nOn debian type\nsudo apt install hugo\nOn arch type\nsudo pacman -S hugo\nOn fedora type\nsudo dnf install hugo On windows:\nNavigate to https://github.com/gohugoio/hugo/releases/latest\nFind the windows version and download it.\nUnzip the file to your desired directory\nAdd this directory to the PATH environment variable\nRead more: https://gohugo.io/installation/windows/\nCreating the hugo site Open up a terminal and type:\nhugo new site my_website\nAnd then cd into that directory\ncd my_website\nAfter that we will have to install a theme. I will be using the LoveIt theme but you can use any other theme\nAll hugo themes https://themes.gohugo.io/\nNOTE: I now use a completely different theme New look, new start\nFor the LoveIt theme:\nThe first thing we will have to do is type\ngit clone https://github.com/dillonzq/LoveIt.git themes/LoveIt\nYou will have to have git installed if you don‚Äôt, follow the instructions on the page to download it.\nNow we will have to create some basic configuration. Every theme has its own so you should first check your themes documentation. Some basic settings work for all themes.\nHere is an example of the most basic settings for the LoveIt theme. (it has to be saved in config.toml)\nbaseURL = \u0026#34;http://example.org/\u0026#34; # Change the default theme to be use when building the site with Hugo theme = \u0026#34;LoveIt\u0026#34; # website title title = \u0026#34;My New Hugo Site\u0026#34; # language code [\u0026#34;en\u0026#34;, \u0026#34;zh-CN\u0026#34;, \u0026#34;fr\u0026#34;, \u0026#34;pl\u0026#34;, ...] languageCode = \u0026#34;en\u0026#34; # language name [\u0026#34;English\u0026#34;, \u0026#34;ÁÆÄ‰Ωì‰∏≠Êñá\u0026#34;, \u0026#34;Fran√ßais\u0026#34;, \u0026#34;Polski\u0026#34;, ...] languageName = \u0026#34;English\u0026#34; # Author config [author] name = \u0026#34;xxxx\u0026#34; email = \u0026#34;\u0026#34; link = \u0026#34;\u0026#34; # Menu config [menu] [[menu.main]] weight = 1 identifier = \u0026#34;posts\u0026#34; # you can add extra information before the name (HTML format is supported), such as icons pre = \u0026#34;\u0026#34; # you can add extra information after the name (HTML format is supported), such as icons post = \u0026#34;\u0026#34; name = \u0026#34;Posts\u0026#34; url = \u0026#34;/posts/\u0026#34; # title will be shown when you hover on this menu link title = \u0026#34;\u0026#34; [[menu.main]] weight = 2 identifier = \u0026#34;tags\u0026#34; pre = \u0026#34;\u0026#34; post = \u0026#34;\u0026#34; name = \u0026#34;Tags\u0026#34; url = \u0026#34;/tags/\u0026#34; title = \u0026#34;\u0026#34; [[menu.main]] weight = 3 identifier = \u0026#34;categories\u0026#34; pre = \u0026#34;\u0026#34; post = \u0026#34;\u0026#34; name = \u0026#34;Categories\u0026#34; url = \u0026#34;/categories/\u0026#34; title = \u0026#34;\u0026#34; # Markup related configuration in Hugo [markup] # Syntax Highlighting (https://gohugo.io/content-management/syntax-highlighting) [markup.highlight] # false is a necessary configuration (https://github.com/dillonzq/LoveIt/issues/158) noClasses = false You can find my configuration here\nYou can view your page live by running\nhugo serve\nLet‚Äôs move on to the next step.\nAdding articles to our blog The first thing we will have to do is create a new file with any name ending in .md inside of our content folder. I like to separate my posts from other sections so I will create another folder inside of the content one called posts.\nYou can run this command to add the file\nhugo new posts/first_post.md\nNow open the file that was just created using your favorite text editor.\nYou should see something like this:\n--- title: \u0026#34;Epic title\u0026#34; date: 2023-03-23T18:13:03+03:00 draft: true --- If you want the post to be publicly visible on your blog delete the draft line. or set it to false.\nNow if we want to add some content we will have to write it in markdown. Heres a great guide on some basic markdown syntax https://hugoloveit.com/basic-markdown-syntax/\nHeres an example of some content\n--- title: \u0026#34;My First Post\u0026#34; date: 2023-03-23T18:13:03+03:00 draft: false --- # Welcome to my blog! This is my first post. Here\u0026#39;s a picture of my cat: ![My cat](/images/cat.jpg) Using the above steps you can add all of your articles to the blog.\nNow that we are done with that let me show you how we will publish our blog.\nDomain More like a sub-domain. Head to eu.org and get a free domain. Create an account and submit a request for a new domain. It might take some time even months to get accepted.\nI have already registered 4rkal.eu.org from there.\nNow we will have to get some ssl certificates using cloudflare.\nSSL certificates just make your site use https instead of http this is really great for seo and doesn‚Äôt make your site look sus.\nHead over to cloudflare.com and create an account for free.\nAfter you are done with that go to your dashboard and select websites and then add a site.\nYou should see something like this\nEnter your websites url and click on add site.\nAfter that select the free plan and continue.\nNow it will review your dns records. Just select continue and confirm\nNow you will have to change your domain‚Äôs name servers.\nTo do that head back to eu.org select your domain and click on the nameservers tab and select server names.\nNow in the input fields enter the name servers.\nThe name servers will most probably be:\nnancy.ns.cloudflare.com uriah.ns.cloudflare.com Here‚Äôs how it should probably look:\nNow click on the submit button.\nYou should probably get\nNo error, applying changes... Done If you get an error you probably screwed up one of the above steps. Just try again.\nAfter your name servers have been changed and everything is done, in your domain dashboard select SSL/TLS. Just select full encryption.\nHosting our site. First create a github account. Head to github.com for that. You will also have to install git\nAfter you have done that navigate to your blog‚Äôs root directory and type:\ngit init hugo git add . git commit -m \u0026#34;first commmit\u0026#34; git branch -M main Now go to github and create a new repository.\nYou should now type:\ngit remote add origin YOURURL\ninstead of YOURURL enter the url to your github repo and add a .git ending\neg\ngit remote add origin https://github.com/4rkal/blog.git\nNow push the changes with\ngit push -u origin main\nAfter that if you refresh the page of your github repo you should see everything there.\nNow head to render.com and create an account\nOn your dashboard select +New and then static site.\nNow you will be prompted to connect a github repository. Just connect your account and add that repository.\neg\nNow enter a service name eg myblog and in the publish directory just add\npublic\nThen click on create static site.\nAfter it has been deployed successfully head over to the settings and in the custom domains tab click on add custom domain.\nIn the field enter the domain that we registered with eu.org previously.\nNow go to cloudflare and in your domain dashboard select dns and click on add a new record.\nIn the type dropdown select CNAME in the name field add @ and in the target add your blog‚Äôs url from render. Mine is https://blog-ygtj.onrender.com/. Also untick the proxy status.\nNow we will have to do the same but with the www.\nJust do the same steps as above but instead of @ just add www\nThat‚Äôs it. After a couple of minutes your blog should be live.\nSEO Google and bing If you want to get your website on google and bing it‚Äôs pretty easy\nIf you want to get your website on google follow the guide listed here https://developers.google.com/search\nFor bing it should be pretty much the same process on https://www.bing.com/webmasters/\n*If you enjoyed this article consider supporting me\n","permalink":"https://4rkal.eu.org/posts/thisblog/","summary":"In this article I‚Äôll show you how I setup this blog completely for free. I‚Äôll show you how to use hugo to write your blog, Cloudflare and eu.org for your domain and ssl, Render and github for the hosting and even how to get your blog on google.\nWhat is hugo? Hugo is a fast and popular open-source static site generator used for creating static websites without requiring a database or dynamic components.","title":"How I setup this blog for free (domain, hosting, ssl) Complete Guide"},{"content":"Why you should use Python. Going over the basics of Python.\nIn this course/article I will be talking about why someone should use Python. Later on, I will be tackling the basics of Python. But let\u0026rsquo;s start by explaining what coding is.\nWhat is coding? Coding means writing instructions for computers and a finished set of instructions is known as a program. Computer programs control everything from smartphones to space rockets.\nWhat is Python? Python is a text-based computer language which means it‚Äôs made up of words and symbols (such as * and = ). Its language elements and object-oriented approach are meant to assist programmers in writing clear, logical code for both small and large-scale projects.\nWhy Python? Python is one of the most popular computer languages and it‚Äôs very concise ‚Äî that is, you don\u0026rsquo;t need to type much in order to create programs that do a lot.\nAdvantages of python Simple to read, learn, and write Python is a high-level programming language with a syntax that is similar to English. This makes the code easier to read and comprehend.\nPython is really simple to pick up and understand, which is why many people suggest it to newcomers. When compared to other prominent languages like C/C++ and Java, you require fewer lines of code to accomplish the same purpose.\nImproved Productivity Python is an extremely useful programming language. Python‚Äôs simplicity allows developers to concentrate on solving the problem.\nThey don‚Äôt need to spend a lot of time learning the programming language‚Äôs syntax or behaviour. You write less code and accomplish more.\nFree and Open-Source Python comes under the OSI-approved open-source license. As a result, it is both free to use and distribute. You can get the source code, change it, and even share your own Python version.\nPortability In many languages like C/C++, you need to change your code to run the program on different platforms. With Python, however, this is not the case. You only have to write it once and it may be used wherever.\nDownloading Python On Linux You probably already know how to install it but I\u0026rsquo;m gonna show it anyways.\nOpen your terminal and type python or python3; if it does not work then run: (depending on your distro) sudo apt install python3\nWindows 10 1 . First check if you already have Python installed. Go to the ‚ÄòStart‚Äô menu and click on the ‚ÄòAll programs‚Äô. If you see the word ‚ÄúPython‚Äù it means that you already have it installed. If you don\u0026rsquo;t already have it installed go to https://python.org, download the correct version for your computer and then install it.\nPython comes in different versions. This course uses version 3 and upwards. I recommend always installing the latest version. What is an IDE? IDE stands for the integrated development environment (IDE) and is software for building applications that combine common developer tools into a single Graphical User Interface (GUI).\nThe IDE that we will be using in this series is called VS Code.\nDownloading VS Code Go to https://code.visualstudio.com/ and download the version that you want. Vs Code is available for Windows, Mac, and Linux. Follow the instructions on the website for installation.\nStarting in Python It\u0026rsquo;s traditional in the programming world to make the computer say ‚ÄòHello World‚Äô with your very first piece of code. In Python, this is very simple.\nOpen Vs Code and click on File \u0026gt; New File and name your file helloworld.py. The .py tells the computer that this is a Python program. In your project, in VS Code type : print(\u0026quot;Hello World!\u0026quot;) Save your project and click on the run button at the top of your screen If you have done everything correctly you should see a Hello World message in your terminal. If it didn\u0026rsquo;t work you should get a red error message something like this:\nSyntaxError: invalid syntax\nIf that happens make sure that you have copied it exactly like above.\nPlaying With numbers in Python Python makes it easy to do maths. You just type in a question and get the answer\nAdding Up\nOpen an empty project and type:\nprint(2+2)\nYou should see the answer: 4\nSubtracting(and more) If you want to subtract, use the ‚Äò-‚Äô symbol like this:\nprint(2 - 2)\nTo multiply use the ‚Äò*‚Äô symbol:\nprint(2 * 2)\nTo divide, use the ‚Äò/‚Äô symbol\nprint(2 / 2)\nVariables A variable is like a labelled box that stores information. You can change this information but the label stays the same.\nCreating a variable: To tell the computer what you want your variable to be, you use the = sign. This is called assigning a value to a variable. It‚Äôs very simple, here\u0026rsquo;s an example using fish.\nOpen a new VS Code project and type: fish = 5 Imagine a cat gets hungry and eats two fish. To create another variable for the amount eaten, write the following:\nfishEaten = 2\nPress enter and then type:\nprint(fish - fishEaten)\nSave and run your code and you should get the answer: 3\nInput in Python You can use the input() function to ask for information from the user.\nOpen a new VS Code project and type: name = input(\u0026quot;What is your name? \u0026quot;)\nRun the program and you should get the following message: What is your name? 3. Now let\u0026rsquo;s try printing your name.\nAdd the following to your program:\nprint(name)\nYou have successfully created an input field!\nThis can be very useful in creating decision games.\nMaking Decisions To write a program that allows you to make decisions the computer needs to react differently to different answers. For this, you need conditions to compare pieces of information, and conditionals to create different paths through the program.\nWhat are Conditions? A condition is a bit of code that compares two pieces of information. Conditions use operators to make these comparisons. For example, the operator == checks if two pieces of information are the same.\nOpen a new Vs Code project and type: age = 10 if age == 12: print(\u0026#34;True\u0026#34;) else: print(\u0026#34;False\u0026#34;) Save and run and you should get False That is because ‚Äòage‚Äô is set to 10 and not 12\nWhat are conditionals To use a condition in your code you need a command called a condition. Conditionals use conditions. Conditions show if something is True or False.\nIF One important condition is known as an if statement which tests whether a condition is true. If it is, the computer will follow the instructions after the if statement. If not, the computer will just skip it. In Python, if is a keyword. Dont use it as a variable name because the computer will think that it\u0026rsquo;s an if statement and get confused.\nImplementing the if condition Create a new VS Code project and type the following: user_reply = (\u0026quot;Do you like python? (Type yes or no) \u0026quot;)\nThen we will implement the if condition by typing the following: if user_reply == \u0026#34;yes\u0026#34; print(\u0026#34;Python likes you to ! \u0026#34;) ELIF elif is short for else if. If the conditions of the if code isn‚Äôt met it ‚Äúsweeps up‚Äù whatever is left.\nNow type the following: elif user_reply == \u0026#34;maybe\u0026#34;: print(\u0026#34;Make up your mind!\u0026#34;) ELSE When conditions for the if and elif code arent met, else goes into action and ‚Äúsweeps up‚Äù whatever is left.\nLet\u0026rsquo;s implement that: 4. Now type the following:\nelse: print(\u0026#34;Well python doesn\u0026#39;t like you either\u0026#34;) The complete code should look something like this:\nuser_reply = (\u0026#34;Do you like python? (Type yes or no) \u0026#34;) if user_reply == \u0026#34;yes\u0026#34; print(\u0026#34;Python likes you to ! \u0026#34;) elif user_reply == \u0026#34;maybe\u0026#34;: print(\u0026#34;Make up your mind!\u0026#34;) else: print(\u0026#34;Well python doesn\u0026#39;t like you either\u0026#34;) Don\u0026rsquo;t forget to press the tab after if statements.\nRandomness in python In python we can use the random function in order to generate random numbers. This can be extremely useful in a variety of things.\nThe first thing we will have to do is import the random function\nimport random\nAfter that we can print out a random number with the following\nprint(random.randint(1,10))\nThis will output a random number from 1‚Äì10\nrandint stands for random integer.\nHere is the full code.\nimport random print(random.randint(1,10)) Loops in python There are two types of loops in python\nWhile loop For loop While loops only stop when something changes. If it doesn\u0026rsquo;t change they could go on forever.\nWith for loops on the other hand you can define exactly when you want them to stop\nThe most popular example of a while loop is\nwhile True:\nWhich will run forever eg\nwhile True: print(\u0026#34;hi\u0026#34;) This will run forever.\nWith while loops on the other hand you can define exactly how many times you want the loop to run.\nfor x in range(0,10): print(\u0026#34;Hi\u0026#34;) This will print Hi exactly 10 times\nGuessing game Now lets combine what learned from above and from our previous articles to create a game\nThe computer will select a random number from 1‚Äì10 and you will have to guess it.\nThe first thing we will have to do is\nimport random\nAfter that we will create a variable called number\nnumber = random.randint(1,10)\nAfter that we will create another variable called your_guess\nyour_guess = int(input(\u0026quot;Im thinking of a number from 1 to 10, can you guess which one?\u0026quot;))\nWe are using int as you will have to enter a number\nNow we will create a while loop that will keep the game running until you guess the number\nwhile your_guess != number:\nThe code so far is\nimport random number = random.randint(1,10) your_guess = int(input(\u0026#34;Im thinking of a number from 1 to 10, can you guess which one?\u0026#34;)) while your_guess != number: if your_guess \u0026lt; number: print(\u0026#34;Your number was too low\u0026#34;) else: print(\u0026#34;You number was to high\u0026#34;) And the following\nprint(\u0026quot;GG you found it\u0026quot;)\nYou code should now look like this\nimport random number = random.randint(1,10) your_guess = int(input(\u0026#34;Im thinking of a number from 1 to 10, can you guess which one?\u0026#34;)) while your_guess != number: if your_guess \u0026lt; number: print(\u0026#34;Your number was too low\u0026#34;) else: print(\u0026#34;You number was to high\u0026#34;) your_guess = int(input(\u0026#34;Please try again... \u0026#34;)) print(\u0026#34;GG you found it\u0026#34;) Thats it for now\nStay tuned for more\nIf you enjoyed this article consider supporting me\n","permalink":"https://4rkal.eu.org/posts/python/","summary":"Why you should use Python. Going over the basics of Python.\nIn this course/article I will be talking about why someone should use Python. Later on, I will be tackling the basics of Python. But let\u0026rsquo;s start by explaining what coding is.\nWhat is coding? Coding means writing instructions for computers and a finished set of instructions is known as a program. Computer programs control everything from smartphones to space rockets.","title":"Python for Complete Beginners"},{"content":"What is PocketBase PocketBase is an open source backend made in go consisting of embedded database (SQLite) with realtime subscriptions, built-in auth management, convenient dashboard UI and simple REST-ish API.\nInstall PocketBase The first thing that you will have to do is head to https://pocketbase.io and select the file for your operating system. Since I am using linux I will show how to set this up on linux but it should be pretty similar for any other os.\nUnzip the file and open up a terminal to the path that you extracted the file to and type:\n./pocketbase serve\nIf you want to serve some static content you can create a new directory called pb_public\nmkdir pb_public\nThen paste any content into that directory\neg.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Epic Website\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;My epic website\u0026lt;/h1\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; And save that as index.html inside of the pb_public folder\nNow if you head to http://127.0.0.1:8090/ you should see the website that we entered above.\nIf you go to http://127.0.0.1:8090/_/ it will take you to an admin portal. There you should create a account. After you have setted up your account you should see something like this.\nHere you can add and create users\nAnd also create custom collections eg\nIf you click on the settings icon you can see that you will be able to add applications, mail settings, file storage (s3) , export/import collections, add or remove auth providers, token options and add/remove admins.\nThat‚Äôs it for now if you want to learn more check out https://pocketbase.io/docs/\nIf you enjoyed this article consider supporting me\n","permalink":"https://4rkal.eu.org/posts/pocketbase/","summary":"What is PocketBase PocketBase is an open source backend made in go consisting of embedded database (SQLite) with realtime subscriptions, built-in auth management, convenient dashboard UI and simple REST-ish API.\nInstall PocketBase The first thing that you will have to do is head to https://pocketbase.io and select the file for your operating system. Since I am using linux I will show how to set this up on linux but it should be pretty similar for any other os.","title":"PocketBase self-hosted Firebase alternative"},{"content":"In this article, I will tell you why Monero fits my views of what a cryptocurrency should look like.\nWhat is Monero? Monero is a decentralized cryptocurrency. It uses a public distributed ledger with privacy-enhancing technologies that obfuscate transactions to achieve anonymity and fungibility. Observers cannot decipher addresses trading Monero, transaction amounts, address balances, or transaction histories.\nMonero works like any other currency but with some privacy and decentralization innovations.\nMonero uses stealth addresses alongside ring signatures and ring CTs to \u0026ldquo;hide\u0026rdquo; the transaction and transaction amounts, enhancing transaction privacy. To further decentralize the network, Monero uses the RandomX algorithm to discourage the use of ASICs.\nThe Main Problems with Bitcoin and Other Cryptos Bitcoin may seem like a perfect currency. However, under the hood, Bitcoin has many flaws.\nOne of the main problems with Bitcoin is that it isn\u0026rsquo;t actually censorship-resistant. A central bank or government can blacklist your address and block exchanges from accepting it. While there are ways to get around that, it isn\u0026rsquo;t easy. Monero, on the other hand, is censorship-resistant as it doesn\u0026rsquo;t display transaction amounts or receivers.\nAnother problem with Bitcoin and other PoW currencies is that they are actually controlled by a small number of people since they are really hard to mine, among many other factors. Monero is a relatively easy currency to mine and is ASIC-resistant, which makes it even more decentralized as anyone with a computer and an internet connection can start contributing to the network.\nBitcoin has a block size limit, which results in more expensive transactions and longer waiting times. Monero uses a dynamic block size.\nAlso, Bitcoin has a high block time, which means that transactions take longer to be confirmed and executed. Bitcoin\u0026rsquo;s block time is ~10 minutes, while Monero\u0026rsquo;s block time is ~2 minutes.\nBitcoin has halving once every 4 years. The halving halves the amount of mined (printed) Bitcoin in every block. This, by itself, increases price volatility and transaction fee volatility.\nMonero has chosen a 0.6 XMR block reward forever. Any good currency wants to have as little volatility as possible. Monero is a currency, not a \u0026ldquo;number go up coin.\u0026rdquo;\nConclusion Monero is basically what people think Bitcoin is. Here\u0026rsquo;s a great video about it.\nDisclaimer Tech has nothing to do with price. This article reviews the tech of this project and is thus not financial advice. Please DYOR when investing.\nSupport Me If you enjoyed this article, consider supporting me:\nMonero:\n8AztDJtwb7iKaqP4KXRG39VibAacCY1mMfH3bNsVjhYMYbohtT5LKoTSRP6vJGtjeBSPEpFdHZx3ZL3iVowYdkqeQwPAG2o\n","permalink":"https://4rkal.eu.org/posts/whymonero/","summary":"In this article, I will tell you why Monero fits my views of what a cryptocurrency should look like.\nWhat is Monero? Monero is a decentralized cryptocurrency. It uses a public distributed ledger with privacy-enhancing technologies that obfuscate transactions to achieve anonymity and fungibility. Observers cannot decipher addresses trading Monero, transaction amounts, address balances, or transaction histories.\nMonero works like any other currency but with some privacy and decentralization innovations.","title":"Why Monero is the ultimate form of a cryptocurrency"},{"content":"With ventoy, you don‚Äôt need to format the disk over and over, you just need to copy the ISO files to the USB drive and boot them directly.\nWhats ventoy? Ventoy is a free and open-source utility used for writing image files such as .iso, .wim, .img, .vhd(x), and .efi files onto storage media to create bootable USB flash drives. Once Ventoy is installed onto a USB drive, there is no need to reformat the disk to update it with new installation files; it is enough to copy the .iso to the USB drive and boot from them directly. Ventoy will present the user with a boot menu to select one of these files.\nRequirements a computer a internet connection (pretty hard without one) a usb (min 8gb) Installation Ventoy is available on both linux and windows.\nThe first thing you will have to do is head to ventoy.net . On the download page select your operating system and click on download.\nOn linux After you have extracted the file open the folder and click on the VentoyGUI .\nDepending on your processor type select the file ending in either aarch64 i386 mips64el or x86_64. (It will most probably be x86_64).\nAfter that you should see something like this: Select your device from the devices tab\nThen click on install.\nOn windows Download the file and unzip it\nThen click on the file called Ventoy2Disk.exe\nYou should see something like this\nSelect your usb device from the drop down and click on install.\nUsing ventoy To use ventoy all you have to do is paste your iso files inside of the usb. No formatting etc.\nGG you have now installed ventoy\n*If you enjoyed this article consider supporting me\n","permalink":"https://4rkal.eu.org/posts/ventoy/","summary":"With ventoy, you don‚Äôt need to format the disk over and over, you just need to copy the ISO files to the USB drive and boot them directly.\nWhats ventoy? Ventoy is a free and open-source utility used for writing image files such as .iso, .wim, .img, .vhd(x), and .efi files onto storage media to create bootable USB flash drives. Once Ventoy is installed onto a USB drive, there is no need to reformat the disk to update it with new installation files; it is enough to copy the .","title":"Create a MultiBoot USB using ventoy"},{"content":"Whether you want to scan your network for vulnerabilities or just want to see which ports you have open, nmap can be extremely useful.\nWhat is nmap Nmap (Network Mapper) is a network scanner created by Gordon Lyon . Nmap sends packets and examines the answers to find hosts and services on a computer network. For probing computer networks, Nmap offers a variety of functionalities, including host discovery, service detection, and operating system detection. Scripts that offer more sophisticated service discovery, vulnerability detection, and other features can extend these features. During a scan, Nmap can adjust to changing network conditions, such as latency and congestion.\nInstallation Nmap is available for linux, windows , mac os and even bsd\nIf you are using linux you can install it using your package manager.\nOn apt\nsudo apt install nmap\nOn dnf\nsudo dnf install nmap\nWith pacman\nsudo pacman -S nmap\nOn windows you have to download the executable from the nmap website.\nhttps://nmap.org/download.html\nThe same goes for mac and any other os\nGetting Started The first thing I will show you how to do is find all the ip addresses connected to your local network.\nThe first thing you will have to do is find your inet ip\nOn Linux type\nip a\nOn windows\nipconfig\nYou should see a lot of information, try to find inet. It should look something like this\ninet 192.168.1.28/24\nand copy the ip\nNow type\nnmap -sn IP\nInstead of ip type the ip we found from above\nNow you should see a large list of all the ips connected to your network.\n-sn flag stands for no port scan\nNow we can also get all the ports open on all the ips on your local network\nTo do that type\nnmap IP\nInstead of ip type the ip we found from above\nNow if you have any computers on your local networks with open ports you should see them now\nEg.\nI have a ssh port open on one of my machines so I can see\nPORT STATE SERVICE 22/tcp open ssh If you are running a web server ports 80 and 443 should be open.\nNow lets say that you want to find out what operating system a specified device on your network is running.\nTo do that type\nsudo nmap -O IP\nEg.\nsudo nmap -O 192.168.1.16\nIn my case my device is running linux and you can even find out what kernel version your device is running\nPORT STATE SERVICE 22/tcp open ssh Device type: general purpose Running: Linux 2.6.X OS CPE: cpe:/o:linux:linux_kernel:2.6.32 OS details: Linux 2.6.32 You can press enter while running a scan to see how much time is left\nLets say that you dont want anyone monitoring a network be able to trace back the scan to you.\nFor that we can use decoy mode\nTo use decoy mode add -D followed by any random ip to any nmap command.\neg\nsudo nmap -D 192.168.1.11 192.168.1.16\nThis will make it so that it looks like both your ip and 192.168.1.11 are performing a port scan on 192.168.1.16\nYou can also add multiple ips by adding commas\neg\nsudo nmap -D 192.168.1.11,192.168.1.12 192.168.1.16\nThats all for now\nGG You have now learnt the basics of nmap ***If you enjoyed this article consider supporting me\n","permalink":"https://4rkal.eu.org/posts/nmap/","summary":"Whether you want to scan your network for vulnerabilities or just want to see which ports you have open, nmap can be extremely useful.\nWhat is nmap Nmap (Network Mapper) is a network scanner created by Gordon Lyon . Nmap sends packets and examines the answers to find hosts and services on a computer network. For probing computer networks, Nmap offers a variety of functionalities, including host discovery, service detection, and operating system detection.","title":"Nmap(Network Mapper) For Beginners"},{"content":"Microsoft purchased GitHub in 2018, something many users are not aware of. After Microsoft‚Äôs acquisition of GitHub there have been many controversies like blocking private repositories and access to GitHub pages in certain countries and of course, GitHub Copilot.\nWhat is Github Copilot GitHub Copilot is an artificial intelligence tool developed by GitHub and OpenAI to assist users of Visual Studio Code, Visual Studio, Neovim, and JetBrains integrated development environments (IDEs) by autocompleting code. Currently available by subscription to individual developers, the tool was first announced by GitHub on 29 June 2021, and works best for users coding in Python, JavaScript, TypeScript, Ruby, and Go.\nHow does copilot work? GitHub Copilot is powered by the OpenAI Codex, an artificial intelligence model created by OpenAI. The Generative Pre-trained Transformer 3 (GPT-3) language model, which uses deep learning to create text that resembles human speech, is improved and used in production as the OpenAI Codex.\nGithub copilot was trained on a selection of the English language, public GitHub repositories, including 59 gigabytes of Python code sourced from 54 million public GitHub repositories.\nThere still is a lot of controversy about whether GitHub should be allowed to do so, as most open source licences obviously don‚Äôt contain anything against analyzing your code with AI and selling it. Also, as AI is analyzing the code base it is not classified as derivative work which seems to be legal. However, it seems quite unethical by Microsoft as Copilot is a paid service that relies on analyzing other people‚Äôs code. Read more: https://www.theverge.com/2021/7/7/22561180/github-copilot-legal-copyright-fair-use-public-code\nIf copilot was free to use it would make a lot more sense as it utilizes FOSS(Free and open sourced software) in order to work. However with Microsoft‚Äôs decision to make copilot payed they are monetizing most off GitHub\u0026rsquo;s code base which is an illegal grey zone.\nAnalyzing a huge amount of code without any security features has led to many problems like GitHub leaking phone numbers (I even encountered it while testing copilot out).\nhttps://github.com/community/community/discussions/9584?sort=top?sort=top\nLast but not least by using GitHub copilot you agree to the ToS which clearly states\nGitHub Copilot gives you certain choices about how it uses the data it collects. User engagement data, including pseudonymous identifiers and general usage data, is required for the use of GitHub Copilot and will continue to be collected, processed, and shared with Microsoft and OpenAI as you use GitHub Copilot. You can choose whether your code snippets are collected and retained by GitHub and further processed and shared with Microsoft and OpenAI by adjusting your user settings. Conclusion I personally don‚Äôt use or will ever use GitHub Copilot or recommend it to anyone for the following reasons:\nDoesn\u0026rsquo;t help you learn. Instead does the opposite. Recommends other peoples‚Äô phone numbers, emails and even aws keys. No features have been implemented to stop this as far as I know. Tracks your usage and collects a lot of data. Like Source code that you are editing, related files and other files open in the same IDE or editor, URLs of repositories and files paths. Is paid and proprietary. (You pay to be tracked) Monetizes Open Source Software in an unethical way. Github CoPilot generates vulnerable code 40% of the time PS if you don‚Äôt want GitHub to legally index your code, you could try one of these licenses They might work\n***If you enjoyed this article consider supporting me\n","permalink":"https://4rkal.eu.org/posts/githubmon/","summary":"Microsoft purchased GitHub in 2018, something many users are not aware of. After Microsoft‚Äôs acquisition of GitHub there have been many controversies like blocking private repositories and access to GitHub pages in certain countries and of course, GitHub Copilot.\nWhat is Github Copilot GitHub Copilot is an artificial intelligence tool developed by GitHub and OpenAI to assist users of Visual Studio Code, Visual Studio, Neovim, and JetBrains integrated development environments (IDEs) by autocompleting code.","title":"How Microsoft is monetizing the GitHub code base"},{"content":"There are numerous benefits to running your own git server as opposed to Github . Your code cannot be used for profit . Additionally, nobody can delete your code base .\nRequirements A computer for your server (running [[linux]] preferably debian) An internet connection (pretty hard without one) A second computer with git installed Setup The first thing you will have to do is install git via your package manager\nIf you are using apt\nsudo apt install git\nOn dnf\nsudo dnf install git\npacman\nsudo pacman -S git\nAfter that create a user called git\nsudo useradd git\nYou will have to enter some information, you can leave everything except the password blank.\nNow login to your git user\nsu git\nNow to make our server more secure we are going to use ssh keys.\nmkdir .ssh chmod 700 .ssh/ touch .ssh/authorized_keys chmod 600 .ssh/authorized_keys Now on the computer which you want to commit from you will have to generate a ssh key On your main machine type. My article on keybased auth\nssh-keygen\nAfter that you will have to copy your ssh public key to the authorized_keys\nssh-copy-id user@ip\n(To find out your ip you can type ifconfig)\nNow if you try to connect to your server you should be able to login without a password.\nssh git@ip\nNow you will have to create the folder where all your git repos will be saved.\nI will save mine in ~/git , but you can save them wherever you want\nmkdir ~/git\nNow we have to give the ownership of the git folder to the git user\nchown git:git git\nNow for every repository you will have to create a folder.\neg.\nmkdir ~/git/my_cool_project.git\nNow run\ncd ~/git/my_cool_project.git\nAnd initiate the git repository\ngit init --bare\nNow you can create a couple of files inside of your project (to test it out).\ntouch stuff.txt\nNow you can test if your repository is working by cloning the files from another machine running git.\ngit clone git@ip:~/git/my_cool_project.git\nYou will probably get\nwarning: You appear to have cloned an empty repository.\nThat is because you haven\u0026rsquo;t committed anything.\ngit add . git commit -m \u0026#34;first commit\u0026#34; Now if you test that again it should work.\nGG you did it, you have now successfully set up your own git server\n***If you enjoyed this article consider supporting me\n","permalink":"https://4rkal.eu.org/posts/git/","summary":"There are numerous benefits to running your own git server as opposed to Github . Your code cannot be used for profit . Additionally, nobody can delete your code base .\nRequirements A computer for your server (running [[linux]] preferably debian) An internet connection (pretty hard without one) A second computer with git installed Setup The first thing you will have to do is install git via your package manager","title":"Setup your own git server"},{"content":"We rely on google more and more, but it‚Äôs interesting to know how much data Google is now handling. Alphabet aka Google describes its extensive data collection practices in its privacy policy. The company stores an astounding quantity of data. An estimated 15 exabytes of YOUR data are stored by Google. Google is tracking your every move.\nWhat is searX? Searx is a free and open-source metasearch engine, available under the GNU Affero General Public License version 3, with the aim of protecting the privacy of its users. In order to do this, Searx does not provide the search engines from which it receives results with users‚Äô IP addresses or search histories. Tracking cookies served by the search engines are blocked, preventing user-profiling-based results modification.\nUsers can run private instances of Searx on their own computer, but there are also many public, user-run, Searx instances.\nIn this article i will show you how to run your own searX instance.\nWhat is a metasearch engine? A web search engine‚Äôs data is used by a metasearch engine, an online information retrieval tool, to create its own results. Metasearch engines automatically query search engines eg Google after receiving user input. The users are shown sufficient data that has been gathered, sorted, and presented.\nRequirements An computer (preferably running linux). Check out my article on how to install linux here https://4rkal.medium.com/install-a-debian-server-54add9133eec an internet connection Installing on windows To install on windows you will have to install wsl and follow the setup guide for linux bellow\nTo see how to install wsl head to https://docs.microsoft.com/en-us/windows/wsl/install\nInstalling on Linux (debian) First update your system sudo apt-get update \u0026amp;\u0026amp; sudo apt-get upgrade Now install required packages sudo apt install -y python3-dev python3-babel python3-venv uwsgi uwsgi-plugin-python3 git build-essential libxslt-dev zlib1g-dev libffi-dev libssl-dev Now you will have to create a new user called searx\nsudo -H useradd --shell /bin/bash --system \\ --home-dir \u0026#34;/usr/local/searx\u0026#34; \\ --comment \u0026#39;Privacy-respecting metasearch engine\u0026#39; searx sudo -H mkdir \u0026#34;/usr/local/searx\u0026#34; sudo -H chown -R \u0026#34;searx:searx\u0026#34; \u0026#34;/usr/local/searx\u0026#34; Now change user to searx\ngit clone \u0026quot;https://github.com/searx/searx.git\u0026quot; \u0026quot;/usr/local/searx/searx-src\u0026quot;t\nNow create a virtual environment\necho \u0026quot;. /usr/local/searx/searx-pyenv/bin/activate\u0026quot; \u0026gt;\u0026gt; \u0026quot;/usr/local/searx/.profile\u0026quot;\nTo install searx‚Äôs dependencies, exit the searx bash session you opened above and restart a new. Before install, first check if your virtualenv was sourced from the login (~/.profile):\nUpdate dependencies\npip install -U pip pip install -U setuptools pip install -U wheel pip install -U pyyaml Jump to searx‚Äôs working tree and install searx into virtualenv\ncd \u0026#34;/usr/local/searx/searx-src\u0026#34; pip install -e . Now go back to your default user\nexit\nAnd type sudo -H mkdir -p \u0026quot;/etc/searx\u0026quot;\nThen\nsudo -H cp \u0026#34;/usr/local/searx/searx-src/utils/templates/etc/searx/use_default_settings.yml\u0026#34; \\ \u0026#34;/etc/searx/settings.yml\u0026#34; Now you can edit your settings file\nsudo nano /etc/searx/settings.yml\nYou can change the secret_key\nI will change the port and bind_address but you can change whatever you want.\nNow log back in to your searx user\nsudo -H -u searx -i\nChange directory\ncd /usr/local/searx/searx-src\nExport the settings path\nexport SEARX_SETTINGS_PATH=\u0026#34;/etc/searx/settings.yml\u0026#34; Finally run the web app python searx/webapp.py Now if you head to 127.0.0.1:8888 you should be able to see something like this GG you did it enjoy privacy (in search engines)\n*If you enjoyed this article consider supporting me\n","permalink":"https://4rkal.eu.org/posts/searx/","summary":"We rely on google more and more, but it‚Äôs interesting to know how much data Google is now handling. Alphabet aka Google describes its extensive data collection practices in its privacy policy. The company stores an astounding quantity of data. An estimated 15 exabytes of YOUR data are stored by Google. Google is tracking your every move.\nWhat is searX? Searx is a free and open-source metasearch engine, available under the GNU Affero General Public License version 3, with the aim of protecting the privacy of its users.","title":"Host your own private search engine ‚Äî searX"},{"content":"In this article we will talk about what tails is and how to install and more.\nWhat is tails? Tails, or The Amnesic Incognito Live System, is a security-focused Debian-based Linux distribution aimed at preserving privacy and anonymity.It connects to the Internet exclusively through the anonymity network Tor. The system is designed to be booted as a live DVD or live USB, and leaves no digital footprint on the machine unless explicitly told to do so.\nWhat is the tor network? Tor, short for The Onion Router, is free and open-source software for enabling anonymous communication. It directs Internet traffic through a free, worldwide, volunteer overlay network, consisting of more than six thousand relays,to conceal a user‚Äôs location and usage from anyone performing network surveillance or traffic analysis. Using Tor makes it more difficult to trace a user‚Äôs Internet activity.\nWho is tails intended for? As the tails website states (https://tails.boum.org/). Tails is intended for Activists who use Tails to hide their identities, avoid censorship, and communicate securely. Journalists and their sources use Tails to publish sensitive information and access the Internet from unsafe places. Domestic violence survivors use Tails to escape surveillance at home. You whenever you need extra privacy in this digital world.\nRequirements A computer (minimum of 2GB ram , 64-bit x86‚Äì64 compatible processor) A usb stick with 8GB+ of space Read more https://tails.boum.org/doc/about/requirements/index.en.html\nInstallation Back up all your files USB files as they will get deleted!\nThe first thing you will have to do is to head to https://tails.boum.org/install/index.en.html Now select your operating system\nIll walk you through the installation for windows and linux. This should probably bethe same with linux After you have clicked on the windows logo you should be prompted with the requirements and a step by step guide.\nThe first thing you will have to do is to download the tails usb image.\nAfter that i highly recommend that you verify your download\nJust click on select and select it.\nNow you will have to download balena etcher. Just click on download balena etcher and double click the installer.\nAt this moment plug in your usb (if you have any important files on the usb you have to back the up or they will be lost)\nNow click the flash from file button and select the file you downloaded (it ends in .img)\nClick the Select target button to select your USB stick.\nAnd now select flash.\nThis could take a while so just sit back and relax.\nUsing tails After your installation is finished just reboot your computer and hit F12 or F2 depending on your computer.\nNow you should see a screen thats says something like please select your boot device. You will have to select your usb and hit enter\nNow you should see the grub loader\nSelect Tails and hit enter\nNow you should be booted into tails\nYou will probably see a screen that looks something like this\nHere you will have to set your language and region. We can also press on the + icon to add a admin password mac address anonymization etc. I will just put the admin password and the unsafe browser. You can select anything you want. However remember that changing some of these settings will make you less anonymous.\nOnce you are ready select start tails\nNow you will see\nHere you can select anything you want. I will just select the first option.\nNow you should see this:\nGG you did it. One more step though\nI like to have a persistent volume so that i don‚Äôt lose all my files when i reboot. To do that open the configure persistent volume app and follow the steps there.\nThat‚Äôs it for now\n*If you enjoyed this article consider supporting me\n","permalink":"https://4rkal.eu.org/posts/tails/","summary":"In this article we will talk about what tails is and how to install and more.\nWhat is tails? Tails, or The Amnesic Incognito Live System, is a security-focused Debian-based Linux distribution aimed at preserving privacy and anonymity.It connects to the Internet exclusively through the anonymity network Tor. The system is designed to be booted as a live DVD or live USB, and leaves no digital footprint on the machine unless explicitly told to do so.","title":"Become anonymous and somewhat untraceable with tails os"},{"content":"If you enjoy my articles, here\u0026rsquo;s how you can support me: Crypto Here are my crypto addresses:\nXMR: 8AztDJtwb7iKaqP4KXRG39VibAacCY1mMfH3bNsVjhYMYbohtT5LKoTSRP6vJGtjeBSPEpFdHZx3ZL3iVowYdkqeQwPAG2\nXMR OpenAlias: xmr.4rkal.eu.org\nAltcoins: via trocador on clearnet or tor\nLiberaPay You can donate any currency through libera pay heres the link https://liberapay.com/4rkal/\nBuy me a coffee You can also buy me a coffee:\nExchange some crypto When you exchange crypto I get a small comission use my link on clearnet or tor\n","permalink":"https://4rkal.eu.org/donate/","summary":"If you enjoy my articles, here\u0026rsquo;s how you can support me: Crypto Here are my crypto addresses:\nXMR: 8AztDJtwb7iKaqP4KXRG39VibAacCY1mMfH3bNsVjhYMYbohtT5LKoTSRP6vJGtjeBSPEpFdHZx3ZL3iVowYdkqeQwPAG2\nXMR OpenAlias: xmr.4rkal.eu.org\nAltcoins: via trocador on clearnet or tor\nLiberaPay You can donate any currency through libera pay heres the link https://liberapay.com/4rkal/\nBuy me a coffee You can also buy me a coffee:\nExchange some crypto When you exchange crypto I get a small comission use my link on clearnet or tor","title":"Donate"},{"content":"In this article, I will show you how to set up Pi-hole. Pi-hole will allow you to block in-app ads, improve your network\u0026rsquo;s performance, and monitor statistics. Pi-hole also allows you to create a VPN.\nWhat is Pi-hole? Pi-hole is a Linux network-level advertisement and Internet tracker blocking application that acts as a DNS sinkhole and optionally a DHCP server, intended for use on a private network. It is designed for low-power embedded devices with network capability, such as the Raspberry Pi, but can be installed on any Linux machine. Pi-hole has the ability to block traditional website advertisements as well as advertisements in unconventional places, such as smart TVs and mobile operating system advertisements.\nRequirements A computer with Linux (preferably something Debian-based) Preferably an Ethernet cable Access to your router\u0026rsquo;s admin portal A static IP An internet connection (it\u0026rsquo;s pretty difficult without one, trust me) Installation The first thing we have to do is download the installer.\nTo do that, type:\nwget -O basic-install.sh https://install.pi-hole.net Now, install it with:\nsudo bash basic-install.sh Now you should see something like this:\nJust press OK.\nJust press OK again.\nAs I said before, you have to have a static IP in order to set up the Pi-hole, so if you have one configured, just press Yes.\nOtherwise, you will have to set one up.\nNow you will be prompted to select your upstream DNS provider. You can select any of the DNS providers on the list. I will just select Google.\nAnd press OK.\nAfter that, you will have to select your list. I will just select the default one.\nNow you will have to select whether you want a web admin interface. Select On and then OK.\nNow just select On and press OK.\nAfter that, you can select if you want to log queries. You can select any option you want.\nNow, I recommend that you leave this as default, but you don‚Äôt have to.\nNow it should start installing everything.\nAfter the installation is finished, you should see something like this:\nYou have now successfully installed Pi-hole. You can head to the admin portal by going to the specified IP.\nTo be able to use Pi-hole, you have two options:\nMake the IP the default DNS for your whole network Manually add it on any device I\u0026rsquo;ll go with the second option.\nOn Windows: DNS settings are specified in the TCP/IP Properties window for the selected network connection.\nGo to the Control Panel Click Network and Internet \u0026gt; Network and Sharing Center \u0026gt; Change adapter settings Select the connection for which you want to configure Right-click Local Area Connection \u0026gt; Properties Select the Networking tab Select Internet Protocol Version 4 (TCP/IPv4) or Internet Protocol Version 6 (TCP/IPv6) Click Properties Click Advanced Select the DNS tab Click OK Select Use the following DNS server addresses Replace those addresses with the IP addresses of your Pi Restart the connection you selected in step 3 Repeat the procedure for additional network connections you want to change On Linux: In most modern Linux distributions, DNS settings are configured through Network Manager.\nClick System \u0026gt; Preferences \u0026gt; Network Connections Select the connection for which you want to configure and press Edit Select the IPv4 Settings or IPv6 Settings tab If the selected method is Automatic (DHCP), open the dropdown and select Automatic (DHCP) addresses only instead. If the method is set to something else, do not change it. In the DNS servers field, enter your Pi‚Äôs IP addresses Click Apply to save the changes Warning: If you are not using Network Manager, your DNS settings are specified in /etc/resolv.conf.\nNow, if we head over to any websites with ads, you should see that no ads appear.\nLet\u0026rsquo;s try speedtest.net.\nIf you have followed the steps correctly, you should see something like this:\nNO ADS\nEnjoy the ad-free web.\nIf you enjoyed this article, consider supporting me.\n","permalink":"https://4rkal.eu.org/posts/pihole/","summary":"In this article, I will show you how to set up Pi-hole. Pi-hole will allow you to block in-app ads, improve your network\u0026rsquo;s performance, and monitor statistics. Pi-hole also allows you to create a VPN.\nWhat is Pi-hole? Pi-hole is a Linux network-level advertisement and Internet tracker blocking application that acts as a DNS sinkhole and optionally a DHCP server, intended for use on a private network. It is designed for low-power embedded devices with network capability, such as the Raspberry Pi, but can be installed on any Linux machine.","title":"Get ad free web with Pi-hole"},{"content":"SSH keys provide an extremely secure way of logging into your server.\nSSH Password Based VS Key Based Authentication Clients can be authenticated by an SSH server in a variety of ways. The most basic is password authentication, which is simple to use but not particularly secure. The more advanced and secure way is via ssh keys.Brute-forcing a password-protected account is quite possible thanks to modern computing power and automated scripts. The solution to that is ssh key based authentication.\nHow does Key Based Authentication work? SSH key pairs are two cryptographically secure keys that allow a client to connect to an SSH server. A public key and a private key make up each key pair.The client keeps the private key, which should be kept completely confidential.\nIf the attacker has access to the private key, they will be able to enter into servers using the corresponding public key without requiring further authentication. A passphrase can be used to encrypt the key on disc as an extra precaution.\nThe related public key can be freely shared without causing any harm. The public key can be used to encrypt communications that can only be decrypted with the private key. This attribute is used to verify the authenticity of the key pair. The public key is placed on a distant server that you wish to use SSH to access. The key is saved in a special file called /.ssh/authorized keys in the user account you‚Äôll be login into.\nWhen a client uses SSH keys to authenticate, the server can check if the client has the private key. A shell session is started or the requested command is executed if the client can verify ownership of the private key.\nSetting up The first thing we will have to to do is generate an SSH key pair on your local computer.\nTo do that type\nssh-keygen\nYou should see something like this\nGenerating public/private rsa key pair. Enter file in which to save the key (/home/4rkal/.ssh/id_rsa): Enter passphrase (empty for no passphrase): If you want to you can enter a passphrase to encrypt the private key.\nAfter that your key should be generated.\nNow you will have to copy your public key to your server.\nTo do that type\nssh-copy-id username@host_ip\n(find your servers ip by typing ifconfig in your server)\neg.\n`ssh-copy-id server@192.168.1.13'\nTry to ssh into your server by typing\nssh username@host_ip\nYou should be able to login into your server without the password. However, brute force attacks continue to threaten your server. Now we have to disable password based authentication.\nFirst login to your ssh server by typing ssh username@host_ip\nNow we have edit the ssh config\nsudo nano /etc/ssh/sshd_config\nYou should see a large file that starts with\n# $OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $ At this point press cntrl w and search for PasswordAuthentication\nUncomment the line that says\n#PasswordAuthentication yes\nAnd change it to\nPasswordAuthentication no\nNow press cntrl s to save and cntrl x to exit\nAfter that restart the ssh service with\nsudo service ssh restart\nNow try to ssh into your server from another machine or a vm and you should see something like this\nserver@192.168.1.13: Permission denied (publickey)\nGG you have now secured your server\n*If you enjoyed this article consider supporting me\n","permalink":"https://4rkal.eu.org/posts/sssh/","summary":"SSH keys provide an extremely secure way of logging into your server.\nSSH Password Based VS Key Based Authentication Clients can be authenticated by an SSH server in a variety of ways. The most basic is password authentication, which is simple to use but not particularly secure. The more advanced and secure way is via ssh keys.Brute-forcing a password-protected account is quite possible thanks to modern computing power and automated scripts.","title":"Securing ssh with Key-Based authentication"},{"content":"In this article i will be showing you how to host your ‚Äúdark web‚Äù aka Tor website for free.\nWhat is Tor? Tor ‚Äî short for the Onion Routing project ‚Äî is an open-source privacy network that enables anonymous web browsing. The worldwide Tor computer network uses secure, encrypted protocols to ensure that users‚Äô online privacy is protected. Tor users‚Äô digital data and communications are shielded using a layered approach that resembles the nested layers of an onion.\nWhy use Tor? Tor is useful for anyone who wants to keep their internet activities out of the hands of advertisers, ISPs, and websites. That includes people getting around censorship restrictions in their country, people looking to hide their IP address, or anyone else who doesn‚Äôt want their browsing habits linked to them.\nThe Tor network may also host webpages that only other Tor users can view. In other words, you‚Äôve entered the Dark Web, which consists of websites that aren‚Äôt indexed by the standard crawlers you use to look for products to purchase, and quiz answers etc . On the Dark Web, you can discover everything from free textbooks to drugs ‚Äî and worse ‚Äî as long as you know the secret URL that leads to these sites.\nTor Websites Just like any other website, you will need to know the address of an onion service in order to connect to it. An onion address is a string of 56 mostly random letters and numbers, followed by ‚Äú.onion‚Äù.\nRequirements A linux machine (debian preferably) An internet connection (pretty hard without one,trust me) Installation The first thing we will have to do is install Tor\napt install tor\nNow we will have to enable tor hidden service(which is the website) for that type:\nsudo nano /etc/tor/torrc\nYou should see a large configuration file, search for HiddenService\nYou will have to uncoment:\n#HiddenServiceDir /var/lib/tor/hidden_service/ #HiddenServicePort 80 127.0.0.1:80 Now press cntrl s and then cntrl x to exit\nAfter that start the tor service by running\nsudo service tor start\nor\nsudo systemctl start tor\nNow we also have to install nginx to be able to run our website to do that type\nsudo apt install nginx\nStart the nginx service with the systemctl or service command\nNow we also have to install nginx to be able to run our website to do that type\nsudo cat /var/lib/tor/hidden_service/hostname\nYou should see a address that looks something like this\ntiur7p652svsaemdewbsxnnkrj3b35ny2rx454od5wk5ivfqhijm2qd.onion\nNow open your tor browser and paste your address and press enter.\nYou will most probably be greeted by the default nginx site.\nThis page is easily customized, you can check out my article: here\nGG you did it you are now running a pretty anonymous website on the tor network.\n*If you enjoyed this article consider supporting me\n","permalink":"https://4rkal.eu.org/posts/torhs/","summary":"In this article i will be showing you how to host your ‚Äúdark web‚Äù aka Tor website for free.\nWhat is Tor? Tor ‚Äî short for the Onion Routing project ‚Äî is an open-source privacy network that enables anonymous web browsing. The worldwide Tor computer network uses secure, encrypted protocols to ensure that users‚Äô online privacy is protected. Tor users‚Äô digital data and communications are shielded using a layered approach that resembles the nested layers of an onion.","title":"Setup a tor website (hidden service)"},{"content":"As the linuxfoundation states about 95% of cloud providers run kubernetes which is an open sourced solution, the Apache Web server powers millions of websites including netflix.com, spotify.com and more. Most of the Internets core functions are based on open source technology. But what is it and why is it so important?\nWhat is open sourced software?\nOpen-source software is computer software that is distributed under a license that allows users to use, study, modify, and distribute the program and its source code to anyone and for any purpose. Open-source software may be created in a public, collaborative environment. Open-source software is a good example of open collaboration since it allows any skilled user to engage in development online.\n\u0026ldquo;Certainly there‚Äôs a phenomenon around open source. You know free software will be a vibrant area. There will be a lot of neat things that get done there.\u0026rdquo; -Bill Gates\nWhy open source? There are several advantages to using open-source software.\nTrust. One of the most important advantages is trust. As users can examine your code and make sure its not doing anything they don‚Äôt want it to. They are also able to change things they don‚Äôt like. Most cryptocurrency projects are open sourced to be able to develop trust with their community.\nCommunity A open source community allows more developers to build around the project . Bitcoin is the greatest example of such a community. As soon as bitcoin source code was published many utilities for bitcoin were made like wallets and more which would never have been made if bitcoin wasn‚Äôt open sourced.\nTransparency Anyone can read your source code and see if they want it to do what it is doing. That way your company gains a lot of trust.\n\u0026ldquo;Talk is cheap show me the code\u0026rdquo; Linus Torvalds\nContinuous evolution Your project will continue to be developed even if you give up on it. Again the greatest example for this kind of project is bitcoin. Even though the founder of bitcoin has vanished for more than 10 years, cryptocurrency technology is \u0026ldquo;changing\u0026rdquo; the world.\nLower Development costs (For companies) You can reduce your costs by using open source software. You can save money on licensing and maintenance. The only costs you‚Äôd have to deal with are those for documentation, media, support etc.\nControll With open source YOU are ultimately in controll. If you dont like something you can modify the source code to your liking.\nIf you enjoyed this article consider supporting me\n","permalink":"https://4rkal.eu.org/posts/opensource/","summary":"As the linuxfoundation states about 95% of cloud providers run kubernetes which is an open sourced solution, the Apache Web server powers millions of websites including netflix.com, spotify.com and more. Most of the Internets core functions are based on open source technology. But what is it and why is it so important?\nWhat is open sourced software?\nOpen-source software is computer software that is distributed under a license that allows users to use, study, modify, and distribute the program and its source code to anyone and for any purpose.","title":"The importance of open source software"},{"content":"In this article i will show you how to self host your own website securely.\nRequirements A computer or microcomputer to host the website The computer needs to run linux An internet connection (Its pretty hard without one, trust me) Lets get started!\nInstallation The first thing that we will have to do is setup our nginx site.\nWe first have to be root\nsudo su\nIf you dont have sudo installed try:\nsu -\nNow we will have to install nginx\napt install nginx\nIf you are using any other package manager install it using the package name nginx\nNow we will have to start the nginx service\nsystemctl start nginx\nor\nservice nginx start\nLets find your ip with:\nip a\nor\nifconfig\nIf you open a web browser and go to your ip you should see the default welcome to nginx site.\nSince we want to make our website as secure as possible we can hide the nginx version\nTo do that type\n`sudo nano /etc/nginx/nginx.conf\nNow you should see the nginx configuration file.\nunder\nhttp { ## # Basic Settings ## sendfile on; tcp_nopush on; types_hash_max_size 2048; # server_tokens off; uncomment server_tokens off;\nNow restart your nginx service\nsystemctl restart nginx\nWe can now enter our html files inside of /var/www/html\nTo do that type:\ncd /usr/share/nginx/html\nand now we can create the index.html file\nnano index.html\nand paste/write your html code to index.html\nNow restart the nginx service again\nsystemctl restart nginx\nCertbot Now we will install cerbot in order to get https\nTo install certbot simply type\napt install certbot python-certbot-nginx\nNow we will have to run certbot\ncertbot --nginx\nEnter all the inf oand agree to the terms\nAfter that you will have to enter the name you would like to activate https for\nJust select the names\nAfter that select to redirect http to https\nPort forwarding There are a few ways to port forward. In this article we will use noip.com.\nHead over to noip.com to get started (Use my referal https://www.noip.com/?fpr=4rkal)\nCreate an account and register a hostname\nAfter that we will have to build the noip client on our computer for that paste these commands to your terminal\ncd /usr/local/src wget http://www.no-ip.com/client/linux/noip-duc-linux.tar.gz tar xzf noip-duc-linux.tar.gz cd noip-2.1.9‚Äì1 make make install When you run make install you will be prompted to answer some questions like your login information and the update interval\nIn the update interval just set it to 30\nThen if you don‚Äôt want to run something at a successful update type n if you do then type y.\nYou will now also have to edit the nginx default settings\nto do that type\n`sudo nano /etc/nginx/sites-available/default\nNow you will have to change the server_name to the domain you registered at noip.com\nYou can check if your configuration was successful by running\nnginx -t\nYou can now restart the nginx service\nsystemctl restart nginx\nNow if you head to your domain it should be working and ssl should be installed\n*If you enjoyed this article consider supporting me\n","permalink":"https://4rkal.eu.org/posts/shwebsite/","summary":"In this article i will show you how to self host your own website securely.\nRequirements A computer or microcomputer to host the website The computer needs to run linux An internet connection (Its pretty hard without one, trust me) Lets get started!\nInstallation The first thing that we will have to do is setup our nginx site.\nWe first have to be root\nsudo su\nIf you dont have sudo installed try:","title":"Self host your own website"},{"content":"In this article i will show you how to setup a raspberry pi security camera using motion. In the end of this article you will have a fully functioning security camera with a live feed and motion detection.\nRequirements Raspberry pi or any other computer Web cam Any kind of debian based distro installed on the pi/computer Setup In this article we will be using the motion package (https://motion-project.github.io/)\nTo get started power on your raspberry pi and ssh into the machine or just connect it to a monitor and a keyboard. Also connect your web cam to the raspberry pi usb port.\nThe first thing we will have to do is install motion, for that type the following command:\napt install motion\nNow start motion with:\nsystemctl start motion\nor\nservice motion start\nNow we are going to change some of the default settings . To do that type:\nnano /etc/motion/motion.conf\nThe first thing that we are going to change is\nwebcontrol_localhost off\nThis will enable us to access the stream from other computers.\nTo view the stream run:\nmotion\nIf you get a permission denied error try running\nsudo motion\nIf you got to http://YOUR_IP:8080 you should see a live feed of the web cam\nYou can change the port under webcontrol_port in the config file eg. webcontrol_port 1234\nIf you only want the live stream port you can go to http://your_ip:8081\nAgain you can change that under stream_port.\nNow everything should be working fine. All motion detection files will be saved in /var/lib/motion\nYou can also change loads of other settings. Here are my settings:https://pastebin.com/WGn0NfcW\nRead the documentation here: https://motion-project.github.io/motion_guide.html\n*If you enjoyed this article consider supporting me\n","permalink":"https://4rkal.eu.org/posts/rpicamera/","summary":"In this article i will show you how to setup a raspberry pi security camera using motion. In the end of this article you will have a fully functioning security camera with a live feed and motion detection.\nRequirements Raspberry pi or any other computer Web cam Any kind of debian based distro installed on the pi/computer Setup In this article we will be using the motion package (https://motion-project.github.io/)\nTo get started power on your raspberry pi and ssh into the machine or just connect it to a monitor and a keyboard.","title":"Raspberry pi security camera"},{"content":"If you work in the IT industry, you‚Äôve undoubtedly heard of ssh. But how does it work?\nSSH (secure shell) is a network protocol that allows two computers to connect securely over the internet. SSH uses encryption to prevent hackers from reading data sent between two connected devices.\nSSH is divided into three layers:\nThe transport layer The connection layer The authentication layer During and after authentication, the transport layer establishes safe and secure communication between a client and a server. It is in charge of data encryption, decryption, and integrity assurance. It also provides data compression and caching, which helps to speed up data communication.\nThe authentication layer informs the client about the available authentication methods. It‚Äôs also in charge of the whole user authentication procedure.\nAfter the authentication is successful, the connection layer oversees the communication between the machines. It manages communication channel opening and closure, as well as multiple channels for multiple sessions.\nSession Encryption The server sends the client a list of supported encryption protocols after receiving a connection request. The public key is used by the server as an authentication technique.\nThe client compares the protocols to the ones it already knows. If there are two protocols that are compatible, the machines agree to use one of them to establish the connection.\nOn the first connection attempt, the client compares the server‚Äôs public key to the private key saved in its system. If the keys are identical, the client and server agree to communicate using symmetric encryption during the SSH session. They communicate utilizing an asymmetrically encrypted mechanism based on the Diffie-Hellman (DH) key exchange algorithm for this purpose. There are different ciphers that can be used for SSH depending on the applications being used. Some of them include:\nCHACHA20 AES-GCM Blowfish-CBC AES128-CTR AES192-CTR AES256-CTR Arcfour Cast128-CBC Different Encryption Techniques SSH uses a variety of data manipulation techniques at various points in the transaction to ensure the security of information transmission. These include symmetrical and asymmetrical encryption, as well as hashing.\nSymmetrical Encryption Symmetric encryption creates a single key that is exchanged between two machines. The key is then used by the machines for both encryption and decryption. This approach is rapid and resource-light, and it is used by SSH for each session. When the client and server are deciding which algorithm to employ for an SSH session, the first algorithm on the client‚Äôs list that the server supports is always used.\nAsymmetrical Encryption Any party can have access to the public key. Although it is linked to its paired key, the private key cannot be deduced from the public key. The public key and private key have a mathematical relationship that allows the public key to encrypt messages that can only be decrypted by the private key. This is a one-way ability, which means that the public key cannot decode the communications it sends or decrypt anything the private key sends it.\nThe private key should be kept completely confidential and never shared with anybody else. This is a necessary condition for the public key paradigm to function.The only component that can decrypt communications encrypted with the accompanying public key is the private key. Any entity capable of decrypting these messages has demonstrated control over the private key as a result of this fact.\nHashing r key defining characteristics are that they are never supposed to be reversed, that they are nearly hard to predictably alter, and that they are practically unique.\nIf you use the same hashing function and message, you should get the same hash; if you change any part of the data, you should get a completely different hash. A user should not be able to deduce the actual message from a hash, but they should be able to determine whether a message produced a hash.\nSession Encryption Negotiation The server sends the client a list of supported encryption protocols after receiving a connection request. The public key is used by the server as an authentication technique.\nThe client evaluates the protocols in comparison to its own. The machines choose one to create the connection using if there are any compatible protocols.\nOn the initial connection attempt, the client checks the server\u0026rsquo;s public key to the saved copy of its own private key. The client and server consent to using symmetric encryption to communicate during an SSH session if the keys match. They converse utilizing an asymmetric encryption method that makes use of the Diffie-Hellman (DH) key exchange algorithm.\nUsing a public network, machines can safely collaborate to build a cryptographic key thanks to the DH algorithm. The machines go through the following processes to create a key:\nThe machines agree on two numbers: a modulus and a base number. To prevent brute force key decryption, the chosen modulus is a prime number of at least 600 digits. In order to solve the equation involving the two public numbers, the machines independently select one number. The calculated values are exchanged between the server and the client. Now, utilizing the information obtained from the other machine, each machine computes something. By carrying out the above processes, both machines determine the identical value, which is their secret key. The server then makes an attempt to verify the user\u0026rsquo;s identity who made the access request.\n***If you enjoyed this article consider supporting me\n","permalink":"https://4rkal.eu.org/posts/howsshworks/","summary":"If you work in the IT industry, you‚Äôve undoubtedly heard of ssh. But how does it work?\nSSH (secure shell) is a network protocol that allows two computers to connect securely over the internet. SSH uses encryption to prevent hackers from reading data sent between two connected devices.\nSSH is divided into three layers:\nThe transport layer The connection layer The authentication layer During and after authentication, the transport layer establishes safe and secure communication between a client and a server.","title":"How SSH works"},{"content":"Selenium is a very good skill to have as you can automate almost everything that you can do with a web browser.\nIn this tutorial, we‚Äôll learn how to use Python and Selenium to automate a web browser. This is an updated version of my previous article which unfortunately doesn\u0026rsquo;t work anymore. If you‚Äôre a complete beginner, read my python article to understand the basics. (https://4rkal.medium.com/f1df170bcc08/python-for-beginners)\nWhat is selenium? Selenium is an open source umbrella project for a range of tools and libraries aimed at supporting browser automation. You can use selenium in multiple programming languages including JavaScript (Node.js), C#, Groovy, Java, Perl, PHP, Python, Ruby and Scala and with multiple web browsers including firefox, internet explorer, safary, opera, chrome and edge. Selenium can be very useful for web scraping, automating boring and manual tasks and so much more.\nSetup To install selenium you first have to install a browser driver. Here is the list of supported web browsers :\nFirefox Internet Explorer? Safari Opera Chrome Edge In this article we will be using firefox geckodriver. But you can use any of the browser drivers above. Downloading geckodriver To get started go to github.com/mozilla/geckodriver/releases Scroll down and select the package for your computer. I‚Äôll use geckodriver-v0.31.0-linux64.tar.gz because I‚Äôm using a linux 64-bit computer.\nInstalling geckodriver The setup varies depending on your operating system.\nIf you are using Arch Linux: You can install geckodriver from the aur. Using your favourite aur helper\nOn linux:\nUnzip the file Make the file executable chmod +x geckodriver Add the driver to your PATH so other tools can find it: export PATH=$PATH:/path-to-extracted-file/ On windows: Unzip the file Paste the file in the directory that your script will run Installing selenium To install selenium you have to have python and pip installed.Check out my article on python for more To install selenium open your cmd or terminal and type:\npip install selenium That should install it.\\\nBasics of selenium The first thing we have to do is to create a new file with the .py ending eg. main.py\nAfter you have created it open it in your ide or editor of choice.\\\nThe first thing that we have to do is to import the selenium webdriver : from selenium import webdriver\nAfter that we have to specify what webdriver we are using. In our case its firefox browser = webdriver.Firefox()\nNow we need to specify the url that we want it to go to eg python.org\nbrowser.get(\u0026#39;https://python.org\u0026#39;) The full code so far is:\\ import selenium from selenium import webdriver browser = webdriver.Firefox() browser.get(\u0026#39;https://python.org\u0026#39;) Now we might want it to click on the Downloads button\nThere are a few ways to do this\nMethod 1 of clicking a button The first is with XPATH\nTo find the xpath of a button / object on a website you have to open your web browser go to the desired website and hit F12 to get the development tools. Now you should click on the select tool (See below) Click on it and after that hover above the downloads button with your mouse and click it. After that you should see a bit of code getting highlighted. Right click on the bit of code and select Copy then select Xpath Now go back to the python file and type:\ndriver.find_element(By.XPATH, 'XPATH_HERE')\nThis will throw an error, to fix that error simply add this at the top of the file\nfrom selenium.webdriver.common.by import By\nYour code so far should look like this\nimport selenium from selenium import webdriver from selenium.webdriver.common.by import By browser = webdriver.Firefox() browser.get(\u0026#39;https://python.org\u0026#39;) browser.find_element(By.XPATH, \u0026#39;/html/body/div/header/div/nav/ul/li[2]/a\u0026#39;).click() Method 2 XPATH with text The second method is a bit simpler but not as reliable as the first as there might be many objects with the same name.\nTo use this method type: browser.find_element(By.XPATH, \u0026quot;//*[contains(text(), 'Downloads')]\u0026quot;).click() Your code should look something like this\nimport selenium from selenium import webdriver from selenium.webdriver.common.by import By browser = webdriver.Firefox() browser.get(\u0026#39;https://python.org\u0026#39;) browser.find_element(By.XPATH, \u0026#34;//*[contains(text(), \u0026#39;Downloads\u0026#39;)]\u0026#34;).click() . . . . .\nThere many methods on how to locate elements but the above i believe are the easiest. The methods are the following\nBy.ID By.NAME By.XPATH By.LINK-TEXT By.TAG_NAME By.CLASS_NAME By.CSS_SELECTOR\\ Read more here: https://selenium-python.readthedocs.io/locating-elements.html\nTyping text into input fields. Typing text into input fields is pretty straight forward.\nFor that we will use any of the above methods. I\u0026rsquo;m going to use xpath.\nFind the xpath of any input field, I\u0026rsquo;m going to use the google.com search field\nCopy the xpath and type:\na = browser.find_element(By.XPATH, \u0026quot;XPATH_HERE\u0026quot;) Paste the xpath in XPATH_HERE\nTo send keys we need to import the selenium.webdriver.common.keys library for that paste this line of code at the top of your file\nfrom selenium.webdriver.common.keys import Keys\nNow type:\na.send_keys(\u0026quot;python\u0026quot;)\nAfter that we want to press the enter key for that type:\na.send_keys(Keys.RETURN)\nThe full code should look something like this:\nimport selenium from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.common.keys import Keys browser = webdriver.Firefox() browser.get(\u0026#39;https://google.com\u0026#39;) a = browser.find_element(By.XPATH, \u0026#34;/html/body/div[1]/div[3]/form/div[1]/div[1]/div[1]/div/div[2]/input\u0026#34;) a.send_keys(\u0026#34;python\u0026#34;) a.send_keys(Keys.RETURN) GG you just automated your first google search! You might first need to accept cookies for that just follow the steps on how to click a button from above.\nRead more about selenium here: https://selenium-python.readthedocs.io/\\\n*If you enjoyed this article consider supporting me\n","permalink":"https://4rkal.eu.org/posts/selenium/","summary":"Selenium is a very good skill to have as you can automate almost everything that you can do with a web browser.\nIn this tutorial, we‚Äôll learn how to use Python and Selenium to automate a web browser. This is an updated version of my previous article which unfortunately doesn\u0026rsquo;t work anymore. If you‚Äôre a complete beginner, read my python article to understand the basics. (https://4rkal.medium.com/f1df170bcc08/python-for-beginners)\nWhat is selenium? Selenium is an open source umbrella project for a range of tools and libraries aimed at supporting browser automation.","title":"Automating your web browser with selenium"},{"content":"Most people know that adding up 0.1 + 0.2 equals 0.3. However computers represent it as 0.30000000000000004 .\nHere is a screenshot of it in python3 Your first thought might be that this is just some kind of error. Well its not\nWhy does this happen? Fractions can be represented precisely in the base 10 system (used by humans) if a prime factor of the base is used (10).\n2 and 5 are the prime factors of 10. 1/2, 1/4, 1/5 (0.2), 1/8, and 1/10 (0.1) can be expressed precisely as a result of denominators use prime factors of 10. Whereas, 1/3, 1/6, and 1/7 are repeating decimals as a result of denominators use a prime factor of 3 or 7. On the other hand, fractions can be represented precisely in the base 2 (binary) system (used by computers) if a prime factor of the base is used. 2 is the only prime factor of 2. So 1/2, 1/4, 1/8 can all be expressed precisely because the denominators use prime factors of 2. Whereas 1/5 (0.2) or 1/10 (0.1) are repeating decimals. When you perform math on these repeating decimals, you end up with leftovers which carry over when you convert the computer‚Äôs base-2 (binary) number into a more human-readable base-10 representation. Read more: 0.300.com Wikipedia:\nhttps://en.wikipedia.org/wiki/Floating-point_arithmetic\nIf you enjoyed this article consider donating\n","permalink":"https://4rkal.eu.org/posts/zeropointthree/","summary":"Most people know that adding up 0.1 + 0.2 equals 0.3. However computers represent it as 0.30000000000000004 .\nHere is a screenshot of it in python3 Your first thought might be that this is just some kind of error. Well its not\nWhy does this happen? Fractions can be represented precisely in the base 10 system (used by humans) if a prime factor of the base is used (10).\n2 and 5 are the prime factors of 10.","title":"Why computers can‚Äôt represent 0.3 accurately"}]